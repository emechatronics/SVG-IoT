<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Digital Readout Object</title>
  <script type="text/javascript" src="../../highlight.pack.js"></script>
  <script type="text/javascript" src="../../highlightCode.js"></script>
  <link href='../../highlight.css' rel='stylesheet' />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<script src="../../d3.v4.min.js"></script>


</head>
<body style='padding:10px;font-family:arial'>
<center>
<h4>Digital Readout Object</h4>
<div style='width:90%;background-color:gainsboro;text-align:justify;padding:10px;border-radius:6px;'>
This is a rectangular configurable digital readout object with digital numbers on its face.
This is created by an SVG foreignObject which provides an efficient means of automatically aligning HTML Div &amp; Input elements.

</div>
<table><tr>
<td>
<div style="padding:10px;width:500px;text-align:left">



<p></p>
(Each readout is shown with a simulated change every two(2) seconds)
<p></p>
<b>Configuring The Readout:</b><br />
buildDigitalReadout(id, title, units, max, faceColor, numBorderColor, numColor, numBgColor, transX, transY, scale )<br>
1.) id - your ID for the readout  <br>
2.) title - shown in Readout  <br>
3.) units - units of measurement<br>
4.) max - maximum value number range<br>
5.) faceColor - the background color <br>
6.) numBorderColor - border enclosing the numbers  <br>
7.) numColor -  color of digital numbers<br>
8.) numBgColor - background color for digital numbers<br>
9.) transX - locate readout center x <br>
10.) transY - locate readout  center y <br>
11.) scale - size the readout<br>
</div>
</td>
<td>
<div id="svgDiv" style='width:400px;height:400px;'>
<svg id=mySVG width=400 height=400 overflow="visible">
<defs id=digitalReadoutDefs><g id=digitalReadoutG"><foreignObject id=digitalReadoutObj x=-100 y=-40 width="200" height="80" ><div id=digitalReadoutContainer style="border:1px black solid;font-size:16px;overflow:hidden;width: 200px; height:80px;padding:10px;background:gainsboro;border-radius:8px;width:100%;text-align:center" ><div id=digitalReadoutTitle>Digital Readout Title</div><input onfocus=blur() id=digitalReadoutValue type="text" style='font-size:14px;border:6px white inset;width:180px;background:black;color:lime;font-weight:bold; font-size:30px;font-family:times new roman;' value="00000000.000" /><div id=digitalReadoutUnit>Units Of Measurement</div></div></foreignObject></g></defs>
</svg>
</div>

</td>
</tr></table>
  <br />SVG Source:
  <div id=svgSourceDiv style=overflow:auto;width:100%;height:1px;text-align:left; /></div>
  Javascript:
  <div id=jsCodeDiv style=overflow:auto;width:100%;text-align:left; /></div><p></p>
</center>
<script id=myScript>
//======================DIGITAL READOUT OBJECT========================================
function buildDigitalReadout(id,title,units,max,faceColor,numBorderColor,numColor,numBgColor,transX,transY,scale)
{
    var digitalReadout=digitalReadoutDefs.firstChild.cloneNode(true)  //---<g> element---
    digitalReadout.id=id
    var foreignObject=digitalReadout.childNodes.item(0)
    var containerDiv=foreignObject.childNodes.item(0)

    var titleDiv=containerDiv.childNodes.item(0)
    var input=containerDiv.childNodes.item(1)
    var unitsDiv=containerDiv.childNodes.item(2)

    containerDiv.style.background=faceColor
    titleDiv.innerHTML=title
    unitsDiv.innerHTML=units

    input.value=max

    input.style.color=numColor
    input.style.borderColor=numBorderColor
    input.style.background=numBgColor

    digitalReadout.setAttribute("transform","translate("+transX+","+transY+")scale("+scale+")")
    mySVG.appendChild(digitalReadout)
}

//---onload---
function placeDigitalReadouts()
{
  buildDigitalReadout("readoutOAT","Outside Air Temperature","\u00B0F",120,"violet","#9400d3","lime","black",100,100,1)
  buildDigitalReadout("readoutHWS","Hot Water Supply","\u00B0F",220,"#b0e0e6","#0000cd","lime","black",200,200,.8)
  buildDigitalReadout("readoutPosition","Valve Position","\u0025",100,"#deb887","#d2691e","lime","black",300,300,1.2)
}
//---onload, every 2 seconds---
function randomValues()
{
    var foreignObject=readoutOAT.childNodes.item(0)
    var containerDiv=foreignObject.childNodes.item(0)
    var input=containerDiv.childNodes.item(1)
    input.value=randOAT()

    var foreignObject=readoutHWS.childNodes.item(0)
    var containerDiv=foreignObject.childNodes.item(0)
    var input=containerDiv.childNodes.item(1)
    input.value=randHWS()

    var foreignObject=readoutPosition.childNodes.item(0)
    var containerDiv=foreignObject.childNodes.item(0)
    var input=containerDiv.childNodes.item(1)
    input.value=randPercent()
}

function randOAT()
{
   return Math.floor(Math.random() * 20) + 55

}
function randHWS()
{
   return Math.floor(Math.random() * 20) + 140

}
function randPercent()
{
   return Math.floor(Math.random() * 20) + 80

}


</script>
<script>
document.addEventListener("onload",init(),false)
function init()
{
    placeDigitalReadouts()
   	showSourceSVG()
	showSourceJS()
    setInterval(randomValues,2000)
}


</script>
<script>

  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-88028738-1', 'auto');
  ga('send', 'pageview');


</script>
</body>

</html>